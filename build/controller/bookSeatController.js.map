{"version":3,"sources":["../../server/controller/bookSeatController.js"],"names":["env","config","Booking","req","res","seat_number","body","createdOn","Date","decoded","email","firstName","lastName","userId","user_id","tripId","parseInt","params","db","query","then","trip","rowCount","status","json","message","sql","book","data","rows","err","bookingId","e","console","log"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;AAGAA,mBAAIC,MAAJ;;IAEMC,O;;;;;;;WACJ,qBAAYC,GAAZ,EAAiBC,GAAjB,EAAsB;AACpB,UAAQC,WAAR,GAAwBF,GAAG,CAACG,IAA5B,CAAQD,WAAR;AACA,UAAME,SAAS,GAAG,IAAIC,IAAJ,EAAlB;AACA,yBAAsCL,GAAG,CAACM,OAA1C;AAAA,UAAOC,KAAP,gBAAOA,KAAP;AAAA,UAAcC,SAAd,gBAAcA,SAAd;AAAA,UAAyBC,QAAzB,gBAAyBA,QAAzB;AACA,UAAMC,MAAM,GAAGV,GAAG,CAACM,OAAJ,CAAYK,OAA3B;AACA,UAAMC,MAAM,GAAGC,QAAQ,CAACb,GAAG,CAACc,MAAJ,CAAWF,MAAZ,CAAvB;;AAEAG,qBAAGC,KAAH,0CAA2CJ,MAA3C,GAAqDK,IAArD,CAA0D,UAAAC,IAAI,EAAI;AAChE,YAAIA,IAAI,CAACC,QAAL,GAAgB,CAApB,EAAuB;AACrB,iBAAOlB,GAAG,CAACmB,MAAJ,CAAW,GAAX,EACJC,IADI,CACC;AACJD,YAAAA,MAAM,EAAE,QADJ;AAEJE,YAAAA,OAAO,yBAAkBV,MAAlB;AAFH,WADD,CAAP;AAKD;;AAED,YAAMW,GAAG,GAAG,+FAAZ;AACA,YAAMT,MAAM,GAAG,CAACZ,WAAD,EAAcE,SAAd,EAAyBM,MAAzB,EAAiCE,MAAjC,CAAf;;AACAG,uBAAGC,KAAH,CAASO,GAAT,EAAcT,MAAd,EACGG,IADH,CACQ,UAACO,IAAD,EAAU;AACd,iBAAOvB,GAAG,CAACmB,MAAJ,CAAW,GAAX,EACJC,IADI,CACC;AACJD,YAAAA,MAAM,EAAE,SADJ;AAEJK,YAAAA,IAAI,kCAAOD,IAAI,CAACE,IAAL,CAAU,CAAV,CAAP;AAAqBlB,cAAAA,SAAS,EAATA,SAArB;AAAgCD,cAAAA,KAAK,EAALA,KAAhC;AAAuCE,cAAAA,QAAQ,EAARA;AAAvC;AAFA,WADD,CAAP;AAKD,SAPH,WAOW,UAAAkB,GAAG;AAAA,iBAAI1B,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,YAAAA,MAAM,EAAE,QAAV;AAAoBE,YAAAA,OAAO,EAAEK,GAAG,CAACL;AAAjC,WAArB,CAAJ;AAAA,SAPd;AAQD,OAnBD,WAmBS,UAAAK,GAAG;AAAA,eAAI1B,GAAG,CAACmB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAED,UAAAA,MAAM,EAAE,QAAV;AAAoBE,UAAAA,OAAO,EAAEK,GAAG,CAACL;AAAjC,SAArB,CAAJ;AAAA,OAnBZ;AAoBD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,uBAActB,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,UAAMS,MAAM,GAAIV,GAAG,CAACM,OAAJ,CAAYK,OAA5B;AACA,UAAQiB,SAAR,GAAsB5B,GAAG,CAACc,MAA1B,CAAQc,SAAR;AACA,UAAML,GAAG,4CAAqCK,SAArC,2BAA+DlB,MAA/D,CAAT;;AACAK,qBAAGC,KAAH,CAASO,GAAT,EAAcN,IAAd,CAAmB,YAAM;AACvB,eAAOhB,GAAG,CAACmB,MAAJ,CAAW,GAAX,EACJC,IADI,CACC;AACJC,UAAAA,OAAO,EAAE;AADL,SADD,CAAP;AAID,OALD,WAKS,UAAAO,CAAC;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAAJ;AAAA,OALV;AAMD;;;;;;eAKY,IAAI9B,OAAJ,E","sourcesContent":["import env from 'dotenv';\r\nimport db from '../model/db';\r\n\r\n\r\nenv.config();\r\n\r\nclass Booking {\r\n  seatBooking(req, res) {\r\n    const { seat_number } = req.body;\r\n    const createdOn = new Date();\r\n    const {email, firstName, lastName } = req.decoded;\r\n    const userId = req.decoded.user_id\r\n    const tripId = parseInt(req.params.tripId);\r\n\r\n    db.query(`SELECT id FROM trips WHERE id =${tripId}`).then(trip => {\r\n      if (trip.rowCount < 1) {\r\n        return res.status(422)\r\n          .json({\r\n            status: 'Failed',\r\n            message: `Trip with ID ${tripId} does not exist`\r\n          });\r\n      }\r\n\r\n      const sql = 'INSERT INTO bookings(seat_number, createdOn,userId, tripId) VALUES($1, $2, $3,$4) RETURNING *';\r\n      const params = [seat_number, createdOn, userId, tripId];\r\n      db.query(sql, params)\r\n        .then((book) => {\r\n          return res.status(201)\r\n            .json({\r\n              status: 'success',\r\n              data: { ...book.rows[0], firstName, email, lastName }\r\n            });\r\n        }).catch(err => res.status(500).json({ status: 'Failed', message: err.message }));\r\n    }).catch(err => res.status(500).json({ status: 'Failed', message: err.message }));\r\n  }\r\n\r\n  /**\r\n   *\r\n   *\r\n   * @param {obj} req\r\n   * @param {obj} res\r\n   * @memberof Booking\r\n   */\r\n  deleteBooking(req, res) {\r\n    const userId  = req.decoded.user_id;\r\n    const { bookingId } = req.params;\r\n    const sql = `DELETE FROM bookings WHERE id= ${bookingId} AND userId = ${userId}`;\r\n    db.query(sql).then(() => {\r\n      return res.status(201)\r\n        .json({\r\n          message: 'Booking deleted successfully'\r\n        })\r\n    }).catch(e => console.log(e))\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default new Booking();"],"file":"bookSeatController.js"}